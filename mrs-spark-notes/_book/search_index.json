[
["index.html", "Scalable Machine Learning and Data Science with Microsoft R Server and Spark Chapter 1 Introduction 1.1 Why R? 1.2 Microsoft R Server FTW 1.3 Apache Spark 1.4 SparkR 1.5 Azure HDInsight", " Scalable Machine Learning and Data Science with Microsoft R Server and Spark Ali Zaidi, Machine Learning and Data Science, Microsoft 2016-04-21   Chapter 1 Introduction This book is organized into modules, each of which provide a motivated example of doing data science with R and Spark. The modules are based on notes I created while learning how to make machine learning models scalable, focusing on the tools provided by Microsoft R Server, Azure HDInsight, and Spark.  1.1 Why R? R is a tool of choice for many data scientists. The abundance of available packages for statistical modeling, visualization, and machine learning, coupled with the deep interactivity baked into it’s very foundation, push it to the top of the stack for off-the-shelf languages for data science. Unfortunately, in order to maintain the level of interactivity R provides, it must sacrifice on performance relative to low-level, statitcally typed languages, which makes it inherantly difficult for R to scale, and inhibits it’s adoption in enterprise.   1.2 Microsoft R Server FTW Microsoft R Server (formerly known as Revolution R Enterprise) was developed to tackle R’s scalability challenges and increase the adoption of the R project in industry. The MRS distribution includes R packages designed for scalability, exposing new parallel external memory algorithms that interact with data residing in disk or distributed data stores, and a brand new highly optimized columnar data object, called xdf (short for eXternal Data Frame), that is chunked and especially amenable for parallelization. A coder’s actual typing time is the most important resource in data science applications, and MRS makes it possible for the data scientist to execute highly performant distributed algorithms on huge amounts of data without ever having to leave their favorite programming environment!   1.3 Apache Spark Just like it’s predecessor, Spark was designed to tackle scalability. Realzing that memory was costing….   1.4 SparkR   1.5 Azure HDInsight  "],
["scalable-machine-learning-with-r-and-spark.html", "Chapter 2 Scalable Machine Learning with R and Spark 2.1 Spark primitives", " Chapter 2 Scalable Machine Learning with R and Spark  R is a tool of choice for many data scientists not very scalable in its base implementation data ingestion, manipulation, modeling and predictions spark has a driver program and executors that are run on separate nodes on hdinsight, one driver node, and multiple vms for worker nodes (plus any additional edge nodes)    2.1 Spark primitives  all primitives are vecotrs (just like R) features are represented by vectors nested vectors, sparse vectors, etc the key spark primitive is an RDD RDDs are transformed into vectors through map functions categorical featuers are mapped into tuples     "],
["intro.html", "Chapter 3 Introduction", " Chapter 3 Introduction You can label chapter and section titles using {#label} after them, e.g., we can reference Chapter 3. If you do not manually label them, there will be automatic labels anyway, e.g., Chapter 5. Figures and tables with captions will be placed in figure and table environments, respectively. par(mar = c(4, 4, .1, .1)) plot(pressure, type = &#39;b&#39;, pch = 19)    Figure 3.1: Here is a nice figure!   Reference a figure by its code chunk label with the fig: prefix, e.g., see Figure 3.1. Similarly, you can reference tables generated from knitr::kable(), e.g., see Table 3.1. knitr::kable(   head(iris, 20), caption = &#39;Here is a nice table!&#39;,   booktabs = TRUE )  Table 3.1: Here is a nice table!   Sepal.Length Sepal.Width Petal.Length Petal.Width Species     5.1 3.5 1.4 0.2 setosa   4.9 3.0 1.4 0.2 setosa   4.7 3.2 1.3 0.2 setosa   4.6 3.1 1.5 0.2 setosa   5.0 3.6 1.4 0.2 setosa   5.4 3.9 1.7 0.4 setosa   4.6 3.4 1.4 0.3 setosa   5.0 3.4 1.5 0.2 setosa   4.4 2.9 1.4 0.2 setosa   4.9 3.1 1.5 0.1 setosa   5.4 3.7 1.5 0.2 setosa   4.8 3.4 1.6 0.2 setosa   4.8 3.0 1.4 0.1 setosa   4.3 3.0 1.1 0.1 setosa   5.8 4.0 1.2 0.2 setosa   5.7 4.4 1.5 0.4 setosa   5.4 3.9 1.3 0.4 setosa   5.1 3.5 1.4 0.3 setosa   5.7 3.8 1.7 0.3 setosa   5.1 3.8 1.5 0.3 setosa    You can write citations, too. For example, we are using the bookdown package (Xie 2016) in this sample book, which was built on top of R Markdown and knitr (Xie 2015). ddd aaa  "],
["literature.html", "Chapter 4 Literature", " Chapter 4 Literature Here is a review of existing methods.  "],
["methods.html", "Chapter 5 Methods", " Chapter 5 Methods We describe our methods in this chapter.  "],
["applications.html", "Chapter 6 Applications 6.1 Example one 6.2 Example two", " Chapter 6 Applications Some significant applications are demonstrated in this chapter.  6.1 Example one   6.2 Example two   "],
["final-words.html", "Chapter 7 Final Words", " Chapter 7 Final Words We have finished a nice book.  "],
["references.html", "Chapter 8 References", " Chapter 8 References    Xie, Yihui. 2015. Dynamic Documents with R and Knitr. 2nd ed. Boca Raton, Florida: Chapman; Hall/CRC. http://yihui.name/knitr/.   ———. 2016. Bookdown: Authoring Books with R Markdown. https://github.com/rstudio/bookdown.   "]
]
