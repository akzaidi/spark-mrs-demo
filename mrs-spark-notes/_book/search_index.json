[
["modeling-with-microsoft-r-server.html", "Chapter 4 Modeling with Microsoft R Server 4.1 Import CSV to XDF", " Chapter 4 Modeling with Microsoft R Server  4.1 Import CSV to XDF To take full advantage of the PEMA algorithms provided by MRS, we will import the merged data, currently saved as csv in blob storage, into an xdf. We first have some housekeeping items to take care. We need to specify the spark compute context for the RevoScaleR package to properly utlize the Spark cluster. Saving a text file to HDFS creates blocks of the data and saves them in separate directories, and also saves an additional directory entitled â€œ_SUCCESS&quot; to indicate the import operation was successful. We need to remove this file before importing to xdf, as it has no value for the final data. Further, in order to make sure the MRS modeling functions respect the data types of the columns in our merged dataset, we need to provide it with some column metadata. This can be provided with the colInfo argument inside of rxImport. Lastly, we need to provide MRS with pointers to the HDFS store we will be saving our XDF to. rxOptions(fileSystem = RxHdfsFileSystem())  dataDir &lt;- &quot;/user/RevoShare/alizaidi/delayDataLarge&quot;  if(rxOptions()$hdfsHost == &quot;default&quot;) {  fullDataDir &lt;- dataDir } else {  fullDataDir &lt;- paste0(rxOptions()$hdfsHost, dataDir) }    computeContext &lt;- RxSpark(consoleOutput = TRUE)  # there&#39;s a folder called SUCCESS_ that we need to delete manually file_to_delete &lt;- file.path(data_dir, &quot;delayDataLarge&quot;, &quot;JoinAirWeatherDelay&quot;, &quot;_SUCCESS&quot;) delete_command &lt;- paste(&quot;fs -rm&quot;, file_to_delete) rxHadoopCommand(delete_command)   colInfo &lt;- list(   ArrDel15 = list(type=&quot;numeric&quot;),   Year = list(type=&quot;factor&quot;),   Month = list(type=&quot;factor&quot;),   DayofMonth = list(type=&quot;factor&quot;),   DayOfWeek = list(type=&quot;factor&quot;),   Carrier = list(type=&quot;factor&quot;),   OriginAirportID = list(type=&quot;factor&quot;),   DestAirportID = list(type=&quot;factor&quot;),   RelativeHumidityOrigin = list(type=&quot;numeric&quot;),   AltimeterOrigin = list(type=&quot;numeric&quot;),   DryBulbCelsiusOrigin = list(type=&quot;numeric&quot;),   WindSpeedOrigin = list(type=&quot;numeric&quot;),   VisibilityOrigin = list(type=&quot;numeric&quot;),   DewPointCelsiusOrigin = list(type=&quot;numeric&quot;),   RelativeHumidityDest = list(type=&quot;numeric&quot;),   AltimeterDest = list(type=&quot;numeric&quot;),   DryBulbCelsiusDest = list(type=&quot;numeric&quot;),   WindSpeedDest = list(type=&quot;numeric&quot;),   VisibilityDest = list(type=&quot;numeric&quot;),   DewPointCelsiusDest = list(type=&quot;numeric&quot;),   CRSDepTime = list(type = &quot;numeric&quot;),   CRSArrTime = list(type = &quot;numeric&quot;),   DepDelay = list(type = &quot;numeric&quot;),   ArrDelay = list(type = &quot;numeric&quot;) )  myNameNode &lt;- &quot;default&quot; myPort &lt;- 0 hdfsFS &lt;- RxHdfsFileSystem(hostName = myNameNode,                             port = myPort)  joined_txt &lt;- RxTextData(file.path(data_dir, &quot;delayDataLarge&quot;, &quot;JoinAirWeatherDelay&quot;),                            colInfo = colInfo,                            fileSystem = hdfsFS)  dest_xdf &lt;- RxXdfData(file.path(data_dir, &quot;delayDataLarge&quot;, &quot;joinedAirWeatherXdf&quot;),                       fileSystem = hdfsFS)    rxImport(inData = joined_txt, dest_xdf, overwrite = TRUE) Now that we have imported our data to an XDF, we can get some information about the variables: dest_xdf &lt;- RxXdfData(file.path(data_dir, &quot;delayDataLarge&quot;, &quot;joinedAirWeatherXdf&quot;),                       fileSystem = hdfsFS) rxGetInfo(dest_xdf, getVarInfo = T) ## ======  ed00-mrs-sp (Master HPA Process) has started run at Fri Apr 22 04:14:07 2016  ======  ## ======  ed00-mrs-sp (Master HPA Process) has completed run at Fri Apr 22 04:14:25 2016  ====== ## File name: /user/RevoShare/alizaidi/delayDataLarge/joinedAirWeatherXdf  ## Number of composite data files: 80  ## Number of observations: 148619655  ## Number of variables: 22  ## Number of blocks: 320  ## Compression type: zlib  ## Variable information:  ## Var 1: ArrDel15, Type: numeric, Low/High: (0.0000, 1.0000) ## Var 2: Year ##        26 factor levels: 1990 1992 1994 1997 1999 ... 2005 2008 2010 2011 2012 ## Var 3: Month ##        12 factor levels: 3 8 9 2 5 ... 11 6 12 7 10 ## Var 4: DayofMonth ##        31 factor levels: 11 23 9 26 4 ... 12 8 27 25 22 ## Var 5: DayOfWeek ##        7 factor levels: 7 5 3 2 4 1 6 ## Var 6: Carrier ##        30 factor levels: US UA DL NW DH ... PA (1) KH HA PS VX ## Var 7: OriginAirportID ##        374 factor levels: 10821 13930 11057 13230 11433 ... 10559 13341 14314 11931 10558 ## Var 8: DestAirportID ##        378 factor levels: 10135 10136 10140 10146 10155 ... 10559 11931 10894 14475 12899 ## Var 9: CRSDepTime, Type: numeric, Low/High: (0.0000, 24.0000) ## Var 10: CRSArrTime, Type: numeric, Low/High: (0.0000, 2400.0000) ## Var 11: RelativeHumidityOrigin, Type: numeric, Low/High: (0.0000, 100.0000) ## Var 12: AltimeterOrigin, Type: numeric, Low/High: (28.1700, 31.1600) ## Var 13: DryBulbCelsiusOrigin, Type: numeric, Low/High: (-46.1000, 47.2000) ## Var 14: WindSpeedOrigin, Type: numeric, Low/High: (0.0000, 81.0000) ## Var 15: VisibilityOrigin, Type: numeric, Low/High: (0.0000, 88.0000) ## Var 16: DewPointCelsiusOrigin, Type: numeric, Low/High: (-41.7000, 29.0000) ## Var 17: RelativeHumidityDest, Type: numeric, Low/High: (0.0000, 100.0000) ## Var 18: AltimeterDest, Type: numeric, Low/High: (28.1700, 31.1600) ## Var 19: DryBulbCelsiusDest, Type: numeric, Low/High: (-46.1000, 53.9000) ## Var 20: WindSpeedDest, Type: numeric, Low/High: (0.0000, 63.0000) ## Var 21: VisibilityDest, Type: numeric, Low/High: (0.0000, 88.0000) ## Var 22: DewPointCelsiusDest, Type: numeric, Low/High: (-43.0000, 29.0000)   "]
]
